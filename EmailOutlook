 Sub EmailRangeInHTML2(ByVal Recipient As String, ByVal RecipientCC As String, _
    ByVal Subject As String, sBodyText As String, bSend As Boolean, Optional sAttachments As String, Optional rngToSend As Variant, Optional sOnBehalfOf As String)
    
  Dim FSO As Object
  Dim HTMLcode As String
  Dim HTMLfile As Object
  Dim MyApp As Boolean
  Dim olApp As Object
  Dim rng As Range
  Dim TempFile As String
  Dim wks As Worksheet
  Dim olEmail As Object
  Dim Signature
  Dim vAttachments As Variant
    Dim i As Long
    
    
  Const ForReading As Long = 1
  Const olMailItem = 0
  Const olFormatHTML = 2
  Const UseDefault As Long = -2
    
     On Error GoTo CleanUp
     
     If IsMissing(rngToSend) Then
        'Set rng = Selection
        'do nothing
     Else
        Select Case TypeName(rngToSend)
          Case Is = "Range"
              Set rng = rngToSend
                 ' Copy the worksheet to create a new workbook
                  Set wks = Workbooks.Add.Sheets(1)
                  rng.SpecialCells(xlCellTypeVisible).Copy wks.Cells(1, 1)
                  Set rng = wks.Cells(1, 1).CurrentRegion
                  wks.Columns.AutoFit
                ' The new workbook will be saved to the user's Temp directoy
                  TempFile = Environ("Temp") & "\" & wks.Name & ".htm"
                
                ' If a file by this exists then delete it
                  If Dir(TempFile) <> "" Then Kill TempFile
                  
                ' Convert the Message worksheet into HTML
                 With ActiveWorkbook.PublishObjects.Add( _
                   SourceType:=xlSourceRange, _
                   Filename:=TempFile, _
                   Sheet:=wks.Name, _
                   Source:=rng.Address, _
                   HtmlType:=xlHtmlStatic)
                  .Publish (True)
                 End With
             
               ' Read the HTML file back as a string
                 Set FSO = CreateObject("Scripting.FileSystemObject")
                 Set HTMLfile = FSO.OpenTextFile(TempFile, ForReading, True, UseDefault)
        
               ' Read in the entire file as a string
                 HTMLcode = HTMLfile.ReadAll
            
                 HTMLfile.Close
                
                
               ' Re-align the HTML code to the left side of the page
                 HTMLcode = Replace(HTMLcode, "align=center x:publishsource=", _
                                    "align=left x:publishsource=")
              
          Case Is = "String"
              Set rng = Evaluate(rngToSend)
          Case Else
              MsgBox "Your Selection is Not a Valid Range."
              GoTo CleanUp
        End Select
     End If
    
  
     
         ' Get Outlook
           Set olApp = CreateObject("Outlook.Application")
      
        

         ' Compose and send the email
           Set olEmail = olApp.CreateItem(olMailItem)
           With olEmail
                .display
                Signature = .htmlbody
                .To = Recipient
                .CC = RecipientCC
                .Subject = Subject
                .BodyFormat = olFormatHTML
                .htmlbody = sBodyText & HTMLcode & Signature
                If sOnBehalfOf <> "" Then
                    .SentOnBehalfOfName = sOnBehalfOf
                End If
                
            
                If sAttachments <> "" Then
                     'Adding attachments - deliverd as a list with *** as list separators
                     If InStr(1, sAttachments, "***") > 0 Then
                        vAttachments = Split(sAttachments, "***")
                        For i = LBound(vAttachments) To UBound(vAttachments)
                            If vAttachments(i) <> "" Then
                                .Attachments.Add Trim(vAttachments(i))
                            End If
                        Next i
                     'adding attachement in case of single attachement (no *** sperators in string)
                     Else
                        .Attachments.Add Trim(sAttachments)
                     End If
                     
                 End If
                 
                If bSend Then
                    .send
                Else
                    .display
                End If
                
                 
            End With

            
CleanUp:
   ' Did an error occur
     If Err <> 0 Then
        MsgBox "Run-time error '" & Err.Number & "':" & vbCrLf & vbCrLf & Err.Description
     End If
   
   If IsMissing(rngToSend) = False Then
   ' Close the new workbook and don't save it
     ActiveWorkbook.Close SaveChanges:=False
  
   ' Delete the Temp File
     If Dir(TempFile) <> "" Then Kill TempFile
   
   ' Delete the Publish Object
     With ActiveWorkbook.PublishObjects
       If .Count <> 0 Then .Item(.Count).Delete
     End With
   End If
   ' Free memory resources
     Set olApp = Nothing
     Set olEmail = Nothing
     Set FSO = Nothing

End Sub
